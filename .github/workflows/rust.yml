name: Rust
on: [push]

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          iwr -useb get.scoop.sh | iex
          echo "$HOME\scoop\shims" >> $env:GITHUB_PATH
          echo "C:\ProgramData\scoop\shims" >> $env:GITHUB_PATH
          scoop install aria2
          scoop install llvm
          echo "LIBCLANG_PATH=$HOME\scoop\apps\llvm\current\bin" >> $env:GITHUB_ENV

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          command: build
          args: --release

      - run: Rename-Item -Path "target\release\classicube_roll_plugin.dll" -NewName "classicube_roll_windows_amd64.dll"
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/classicube_roll_windows_amd64.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          sudo apt-get -y update
          sudo apt-get -y install clang llvm
          sudo apt-get -y install mesa-common-dev libopenal-dev libcurl4-openssl-dev libgl1-mesa-dev
          sudo apt-get -y install libasound2-dev libpango1.0-dev libatk1.0-dev libgtk-3-dev

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          command: build
          args: --release

      - run: mv target/release/libclassicube_roll_plugin.so target/release/classicube_roll_linux_amd64.so
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/classicube_roll_linux_amd64.so
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mac:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          brew install llvm
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture

      - name: Build Release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          command: build
          args: --release

      - run: mv target/release/libclassicube_roll_plugin.dylib target/release/classicube_roll_macos_amd64.dylib
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/classicube_roll_macos_amd64.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
